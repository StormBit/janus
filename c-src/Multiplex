Split-process I/O loop commands:

Start the "src/worker.pl" program with a socket (unix socketpair) open on file
descriptor 0. All communication with the worker process is via a line-based
protocol on this socket. When starting the first worker, send "BOOT <apiver>"
where apiver is the API version. This document describes version 12.

Lines in this protocol are sent without acknowledgment.

Client lines:
IC <netid> <addr> <port> <bind> <frozen>
	Open an outbound connection to the given addr:port. Optionally bind to
	the given IP.
IL <netid> <addr> <port>
	Open a listening socket on the given port, bound to the given IP.
	<addr> can be blank to bind to all IPs; in this case there will be 2
	spaces between netid and port.
LA <listenID> <newID> <frozen>
	Accept the incoming connection, using the given ID to refer to it in the
	future.
LD <listenID>
	Drop the pending incoming connection on this socket
F <netID> <frozen>
	Freeze the recvq for the network; used to synchronize SSL handshake
SS <netID> <ssl-key> <ssl-cert> <ssl-ca>
	Start SSL handshake as a server; ssl-key and ssl-cert are required.
	The CA file, if specified, is used to verify the client certificate.
SC <netID> <ssl-key> <ssl-cert> <ssl-ca>
	Start SSL handshake as a client; parameters optional. The CA file is
	used to verify the server's certificate, and the key/cert are used as a
	client certificate.
<netid> <line...>
	Send a line to the network with the given ID. I/O errors are enqueued
	for the next "N" request. "\r\n" should be appended. No response.
D <netid>
	Disconnect the given network. The network ID should not be reused until
	the server has responded with a delete command. Any data remaining in
	the sendqueue should be relayed to the socket before closing.
X
	Stop I/O multiplexing. Server will respond with "X" when it is finished.
R <line...>
	Start a new child process, sending "RESTORE <line...>" as the first
	line (i.e. instead of BOOT). The current process is terminating
	momentarily, so its socket should be closed. To avoid missing lines due
	to buffering, the "S" command should be used, and the sending of "R"
	delayed until the receipt of the server's "S" line.

Server commands:
<netid> <line...>
	The network with the given (numeric) ID has a line ready.
	Line should have the trailing \r\n stripped.
D <netid> <error...>
	The network with this ID has disconnected, with the given error
	message (i.e. connection closed). The client must send a delete message
	to acknowledge this.
P <netid> <address>
	The listening socket with this ID has an incoming connection from the
	given IP address (text form). An IA or ID response is required before
	the next wait line
Q
	Queues are empty, getting ready to select()
T <time>
	Timestamp, returned once per second.
X
	I/O multiplexing has stopped, send "R" line to boot replacement worker
